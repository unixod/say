#!/bin/bash
#
#   say - simple www.forvo.com client
#
#   Feel free to contribute to this project at:
#       http://github.com/unixod/say
#
#   Copyright (c) 2012, Eldar Zakirov <unixod@gmail.com>
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#    2. Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#   OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#   OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   The views and conclusions contained in the software and documentation are
#   those of the authors and should not be interpreted as representing official
#   policies, either expressed or implied, of Eldar Zakirov.
#
#
#   usage:
#       $ say some word(s)
#
#   example:
#       $ say table
#       $ say just in time


### CONFIGURATION ###
CONFIG_FILE="$HOME/.say.conf"
DEFAULT_LNG_ID=39


function getAwkProgram(){
# Trick for mixing AWK and Shell programs in the same file
# awk-programm body must be located in tail of ths file and
# maked with preceding '### AWK PROGRAMM MARKER ###'
# as well as followed # program_name
#   for example:
#       ...
#       shell script body
#       ...
#       ### AWK PROGRAMM MARKER ###
#       # prg1
#       ...
#       awk script body
#       ...
#       ### AWK PROGRAMM MARKER ###
#       # prg2
#       ...
#       awk script body
#       ...
#   usage:
#       PRG=$(getAwkProgram 'program name')

    echo "$(awk '/^### AWK PROGRAMM MARKER ###$/{
        if(body) exit;
        if(getline > 0 && ($0 ~ ("^#[ \t]*" prgName)))
            body = 1;
    }

    body{
        print;
    }' prgName=$1 $0)"
}


function getLanguageID(){
# resolving language id by language abbr-tion from www.forvo.com
# 1st param - language abbreviation (en, ru, tt, ...)
# return    - language id to stdout

    LNG_PRG=$(getAwkProgram 'LanguageID')
    echo $(curl -L 'http://www.forvo.com/search/' 2> /dev/null | awk -v "lngID=$1" "$LNG_PRG" )
}

function showHelp(){
    echo "usage:"
    echo "  $ say -lng=en       #changing language pronunciation"
    echo "  $ say some words"
}

function saveLanguageID(){
# save language id to $CONFIG_FILE
# 1st param - language id

    [[ -n $1 ]] &&
        echo $1 > "$CONFIG_FILE"
}

function loadLanguageID(){
# load language id from $CONFIG_FILE
# return    - language id to stdout

    if [[ -f "$CONFIG_FILE" ]]; then
        cat "$CONFIG_FILE"
    else
        echo $DEFAULT_LNG_ID
    fi
}


case $1 in
    -lng=[a-z]* )   # setting pronounce language
        ID=$(getLanguageID $(echo $1 | sed 's/.*=//'))
        if [[ -n $ID ]]; then
            saveLanguageID $ID
            echo "ok"
        else
            echo "failed"
        fi
        ;;
    '')             # showing help
        echo "$(showHelp)"
        ;;
    * )             # pronouncing
        ID=$(loadLanguageID)
        PARSER_PRG=$(getAwkProgram 'Parser')
        WORD=$@
        URL=$(curl -d "id_lang=$ID&word_search=$WORD" -L 'http://www.forvo.com/search/' 2> /dev/null | awk "$PARSER_PRG")
        if [[ -n $URL ]]; then
            mpg123 -q $URL
        else
            echo "not found"
        fi
        ;;
esac
exit


### AWK PROGRAMM MARKER ###
#Parser
/var (_SERVER_HOST|_AUDIO_HTTP_HOST)/{
    if(match($0, /var[ \t]+(_SERVER_HOST|_AUDIO_HTTP_HOST)[ \t]*=[ \t]*'?([^']+)'?/, tmp)){
        #sev_hst = "tm";
        if(tmp[1] == "_SERVER_HOST"){
            srv_host = tmp[2];
        } else if(tmp[1] == "_AUDIO_HTTP_HOST") {
            audio_http_host = tmp[2];
        }
    }
}
/<a href.+onclick="Play\(/{
    if(match($0, /onclick="Play\([^,]+,'([^,]+)','([^,]+)'\)/, arr)){
        mp3Path = arr[1];
        oggPath = arr[2];

        if (srv_host == audio_http_host){
            mp3Path = ("http://" srv_host "/player-mp3Handler.php?path=" mp3Path);
            oggPath = ("http://" srv_host "/player-oggHandler.php?path=" oggPath);
        } else {
            mp3Path = ("http://" audio_http_host "/mp3/" base64_decode(mp3Path));
            oggPath = ("http://" audio_http_host "/ogg/" base64_decode(oggPath));
        }
    }
    exit;
}

function base64_decode(val){
	command = ("echo '" val "' | base64 -d");
	command | getline ret;
	close(command);
	return ret;
}

END{
    if(mp3Path) print mp3Path;
#    if(oggPath) print oggPath;
}

### AWK PROGRAMM MARKER ###
#LanguageID
# lngID must be defined as command line argument
/<optgroup label="Alphabetically">/ && lngID{
    while(getline > 0 && ($0 !~ /<\/optgroup>/)){
        if(match($0, ("<option value=\"([0-9]+)\"[^(]+\\(" lngID "\\)</option>"), arr))
            print arr[1];
    }
}
